"use strict";var app=angular.module("customerSupportApp",["ngAnimate","ngCookies","ngResource","ui.router","ngSanitize","ngTouch","ng-token-auth"]);app.config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("supportRequest-list",{url:"/support-request/list",templateUrl:"components/support-request/list/template.html",controller:"SupportRequestListController"}).state("supportRequest-view",{url:"/support-request/view/:id",templateUrl:"components/support-request/view/template.html",controller:"SupportRequestViewController"}).state("supportRequest-create",{url:"/support-request/create",templateUrl:"components/support-request/create/template.html",controller:"SupportRequestCreateController"}).state("customer-list",{url:"/customer/list",templateUrl:"components/customer/list/template.html",controller:"CustomerListController"}).state("customer-view",{url:"/customer/view/:id",templateUrl:"components/customer/view/template.html",controller:"CustomerViewController"}).state("agent-list",{url:"/agent/list",templateUrl:"components/agent/list/template.html",controller:"AgentListController"}).state("agent-view",{url:"/agent/view/:id",templateUrl:"components/agent/view/template.html",controller:"AgentViewController"}).state("agent-create",{url:"/agent/create/:id",templateUrl:"components/agent/create/template.html",controller:"AgentCreateController"}).state("admin-list",{url:"/admin/list",templateUrl:"components/admin/list/template.html",controller:"AdminListController"}).state("admin-view",{url:"/admin/view/:id",templateUrl:"components/admin/view/template.html",controller:"AdminViewController"}).state("admin-create",{url:"/admin/create/:id",templateUrl:"components/admin/create/template.html",controller:"AdminCreateController"}).state("report-view",{url:"/report/view",templateUrl:"components/report/view/template.html",controller:"ReportViewController"}).state("user-login",{url:"/user/login",templateUrl:"components/user/login/template.html",controller:"UserLoginController"}).state("user-register",{url:"/user/register",templateUrl:"components/user/registration/template.html",controller:"UserRegistrationController"}),b.otherwise("/user/login")}]),app.config(["$httpProvider",function(a){a.interceptors.push(["$q","$location","$rootScope",function(a,b,c){return{responseError:function(d){return 401===d.status||403===d.status?(window.alert("Resource is forbidden. Please reauthorize."),c.currentUser=null,c.signOut()["finally"](function(){b.url("/user/login")})):404===d.status?(window.alert("Requested resource could not be found"),b.url("/user-login")):0===d.status?window.alert("Cannot reach the server. Try again later."):(window.alert("We encountered an error. Please try again later."),b.url("/user-login")),a.reject(d)}}}])}]),app.run(["$rootScope","$state","$auth","$timeout","User",function(a,b,c,d,e){a.$on("auth:login-success",function(c,d){e.remote.get({id:d.id}).$promise.then(function(c){a.currentUser=c,b.go("supportRequest-list")})}),a.$on("auth:validation-success",function(c,d){a.currentUser||e.remote.get({id:d.id}).$promise.then(function(c){a.currentUser=c,b.go("supportRequest-list")})}),a.$on("auth:validation-error",function(a,c){b.go("user-login")}),a.$on("auth:logout-success",function(){a.currentUser=null,b.go("user-login")}),a.$on("$stateChangeStart",function(c,d,e,f,g){a.currentUser?("user-login"===d.name||"user-register"===d.name)&&(c.preventDefault(),b.go("supportRequest-list")):"user-login"!==d.name&&"user-register"!==d.name&&""!==f.name&&(c.preventDefault(),b.go("user-login"))})}]),app.filter("capitalize",function(){return function(a){return a?a.charAt(0).toUpperCase()+a.substr(1).toLowerCase():""}}).filter("humanize",function(){return function(a){if(a){var b=a.split("_").join(" ").toLowerCase();return b=b.charAt(0).toUpperCase()+b.slice(1)}}}),angular.module("customerSupportApp").controller("AdminListController",["$scope","$state","Admin",function(a,b,c){c.remote.get().$promise.then(function(b){a.admins=b.admins}),a.viewAdmin=function(a){b.go("admin-view",{id:a})},a.createNewAdmin=function(){b.go("admin-create")}}]),angular.module("customerSupportApp").controller("AdminViewController",["$scope","$stateParams","$state","Admin",function(a,b,c,d){var e={id:b.id};d.remote.get(e).$promise.then(function(b){a.admin=b}),a.viewSupportRequest=function(a){c.go("supportRequest-view",{id:a})},a.removeAdmin=function(){window.confirm("Are you sure?")&&d.remote.remove({id:a.admin.id}).$promise.then(function(){c.go("admin-list")})["catch"](function(a){window.alert("Cannot Delete Last Admin")})}}]),angular.module("customerSupportApp").controller("AdminCreateController",["$scope","$state","$filter","Admin",function(a,b,c,d){a.submitAdminForm=function(e){var f={admin:e};d.remote.save({},f).$promise.then(function(a){b.go("admin-view",{id:a.id})})["catch"](function(b){var d=b.data,e=Object.keys(d)[0],f=d[e][0];a.error=c("capitalize")(e)+" "+f})}}]),angular.module("customerSupportApp").controller("AgentListController",["$scope","$state","Agent",function(a,b,c){c.remote.get().$promise.then(function(b){a.agents=b.agents}),a.viewAgent=function(a){b.go("agent-view",{id:a})},a.createNewAgent=function(){b.go("agent-create")}}]),angular.module("customerSupportApp").controller("AgentViewController",["$scope","$stateParams","$state","Agent",function(a,b,c,d){var e={id:b.id};d.remote.get(e).$promise.then(function(b){a.agent=b}),a.viewSupportRequest=function(a){c.go("supportRequest-view",{id:a})},a.removeAgent=function(){window.confirm("Are you sure?")&&d.remote.remove({id:a.agent.id}).$promise.then(function(){c.go("agent-list")})["catch"](function(a){window.alert("Cannot Delete Last Agent")})}}]),angular.module("customerSupportApp").controller("AgentCreateController",["$scope","$state","$filter","Agent",function(a,b,c,d){a.submitAgentForm=function(e){var f={agent:e};d.remote.save({},f).$promise.then(function(a){b.go("agent-view",{id:a.id})})["catch"](function(b){var d=b.data,e=Object.keys(d)[0],f=d[e][0];a.error=c("capitalize")(e)+" "+f})}}]),angular.module("customerSupportApp").controller("CustomerListController",["$scope","$state","Customer",function(a,b,c){c.remote.get().$promise.then(function(b){a.customers=b.customers}),a.viewCustomer=function(a){b.go("customer-view",{id:a})}}]),angular.module("customerSupportApp").controller("CustomerViewController",["$scope","$stateParams","$state","Customer",function(a,b,c,d){var e={id:b.id};d.remote.get(e).$promise.then(function(b){a.customer=b}),a.viewSupportRequest=function(a){c.go("supportRequest-view",{id:a})}}]),angular.module("customerSupportApp").controller("ReportViewController",["$scope","$state","$q","Report","SupportRequest",function(a,b,c,d,e){e.remote.get({report:"true"}).$promise.then(function(b){a.supportRequests=b.support_requests}),a.downloadReport=function(){var a="Report.pdf",b=document.createElement("a");document.body.appendChild(b),b.style="display: none",d.get().then(function(d){try{var e=new Blob([d.data],{type:"application/pdf"}),f=window.URL.createObjectURL(e);b.href=f,b.download=a,b.click()}catch(g){return c.reject(g)}})["catch"](function(a){window.alert("Error "+a)})},a.viewSupportRequest=function(a){b.go("supportRequest-view",{id:a})}}]),angular.module("customerSupportApp").controller("SupportRequestListController",["$scope","$state","SupportRequest",function(a,b,c){c.remote.get().$promise.then(function(b){a.supportRequests=b.support_requests}),a.viewSupportRequest=function(a){b.go("supportRequest-view",{id:a})},a.viewReport=function(){b.go("report-view")},a.createNewSupportRequest=function(){b.go("supportRequest-create")}}]),angular.module("customerSupportApp").controller("SupportRequestViewController",["$scope","$stateParams","$state","SupportRequest",function(a,b,c,d){var e={id:b.id};d.remote.get(e).$promise.then(function(b){a.supportRequest=b}),a.closeSupportRequest=function(){var b={id:a.supportRequest.id},c={support_request:{status:"closed"}};d.remote.update(b,c).$promise.then(function(b){a.supportRequest=b})["catch"](function(a){window.alert("Error "+a)})},a.reopenSupportRequest=function(){var b={id:a.supportRequest.id},c={support_request:{status:"open"}};d.remote.update(b,c).$promise.then(function(b){a.supportRequest=b})["catch"](function(a){window.alert("Error "+a)})}}]),angular.module("customerSupportApp").controller("SupportRequestCreateController",["$scope","$state","$filter","SupportRequest",function(a,b,c,d){a.submitSupportRequest=function(e){var f={support_request:e};d.remote.save({},f).$promise.then(function(a){b.go("supportRequest-view",{id:a.id})})["catch"](function(b){var d=b.data,e=Object.keys(d)[0],f=d[e][0];a.error=c("capitalize")(e)+" "+f})}}]),angular.module("customerSupportApp").controller("UserLoginController",["$scope",function(a){a.$on("auth:login-error",function(b,c){c&&(a.error=c.errors[0])})}]),angular.module("customerSupportApp").controller("UserRegistrationController",["$scope","$auth",function(a,b){a.handleRegistrationButtonClick=function(){b.submitRegistration(a.registrationForm).then(function(){b.submitLogin({email:a.registrationForm.email,password:a.registrationForm.password})})},a.$on("auth:registration-email-error",function(b,c){a.error=c.errors.full_messages[0]})}]),angular.module("customerSupportApp").factory("Admin",["$resource",function(a){var b=a("/api/admins/:id.json",null,{update:{method:"PUT"}});return{remote:b}}]),angular.module("customerSupportApp").factory("Agent",["$resource",function(a){var b=a("/api/agents/:id.json",null,{update:{method:"PUT"}});return{remote:b}}]),angular.module("customerSupportApp").factory("Customer",["$resource",function(a){var b=a("/api/customers/:id.json",null,{update:{method:"PUT"}});return{remote:b}}]),angular.module("customerSupportApp").factory("Report",["$http",function(a){var b=function(){var b=a.get("/api/support_requests.pdf?report=true",{responseType:"arraybuffer"});return b};return{get:b}}]),angular.module("customerSupportApp").factory("SupportRequest",["$resource",function(a){var b=a("/api/support_requests/:id.json",null,{update:{method:"PUT"}});return{remote:b}}]),angular.module("customerSupportApp").factory("User",["$resource",function(a){var b=a("/api/users/:id.json",null,{update:{method:"PUT"}});return{remote:b}}]),angular.module("customerSupportApp").run(["$templateCache",function(a){a.put("components/admin/create/template.html",'<div class="alert alert-danger" role="alert" ng-show="error"> {{error}} </div> <h1>New Admin</h1> <form ng-submit="submitAdminForm(adminForm)" role="form" ng-init="adminForm = {}"> <div class="form-group"> <label for="email">Email</label> <input type="email" name="email" id="email" ng-model="adminForm.email" required class="form-control"> </div> <div class="form-group"> <label for="password">Password</label> <input type="password" name="password" id="password" ng-model="adminForm.password" required class="form-control"> </div> <button type="submit" class="btn btn-primary btn-lg">Create</button> </form>'),a.put("components/admin/list/template.html",'<h1>Admin</h1> <div class="top-button-container"> <button type="submit" class="btn btn-primary" ng-click="createNewAdmin()"> Create New </button> </div> <div class="table-responsive"> <table class="table table-striped"> <thead> <tr> <th>Id</th> <th>Email</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="admin in admins"> <td>#{{admin["id"]}}</td> <td>{{admin["email"]}}</td> <td> <a role="button" ng-click="viewAdmin(admin[\'id\'])"> View </a> </td> </tr> </tbody> </table> </div>'),a.put("components/admin/view/template.html",'<div class="back-link"> <a ui-sref="admin-list">&lt; Admins</a> </div> <h1>Admin</h1> <div class="well"> <div class="row"> <div class="col-md-6"> <strong>Id: </strong> {{admin[\'id\']}} </div> <div class="col-md-6"> <strong>Email: </strong> {{admin[\'email\']}} </div> </div> </div> <div class="button-row clearfix"> <button class="btn btn-default pull-right" type="submit" ng-click="removeAdmin()"> Remove </button> </div>'),a.put("components/agent/create/template.html",'<div class="alert alert-danger" role="alert" ng-show="error"> {{error}} </div> <h1>New Agent</h1> <form ng-submit="submitAgentForm(agentForm)" role="form" ng-init="agentForm = {}"> <div class="form-group"> <label for="email">Email</label> <input type="email" name="email" id="email" ng-model="agentForm.email" required class="form-control"> </div> <div class="form-group"> <label for="password">Password</label> <input type="password" name="password" id="password" ng-model="agentForm.password" required class="form-control"> </div> <button type="submit" class="btn btn-primary btn-lg">Create</button> </form>'),a.put("components/agent/list/template.html",'<h1>Agents</h1> <div class="top-button-container"> <button type="submit" class="btn btn-primary" ng-click="createNewAgent()"> Create New </button> </div> <div class="table-responsive"> <table class="table table-striped"> <thead> <tr> <th>Id</th> <th>Email</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="agent in agents"> <td>#{{agent["id"]}}</td> <td>{{agent["email"]}}</td> <td> <a role="button" ng-click="viewAgent(agent[\'id\'])"> View </a> </td> </tr> </tbody> </table> </div>'),a.put("components/agent/view/template.html",'<div class="back-link"> <a ui-sref="agent-list">&lt; Agents</a> </div> <h1>Agent</h1> <div class="well"> <div class="row"> <div class="col-md-6"> <strong>Id: </strong> {{agent[\'id\']}} </div> <div class="col-md-6"> <strong>Email: </strong> {{agent[\'email\']}} </div> </div> </div> <div class="button-row clearfix"> <button class="btn btn-default pull-right" type="submit" ng-click="removeAgent()"> Remove </button> </div> <h2>Support Requests</h2> <p ng-if="(agent[\'support_requests\'].length === 0)"> <i> No Support Requests Present </i> </p> <div class="table-responsive" ng-if="(agent[\'support_requests\'].length > 0)"> <table class="table table-striped"> <thead> <tr> <th>Id</th> <th>Created At</th> <th>Created By</th> <th>Subject</th> <th>Category</th> <th>Status</th> <th>Closed At</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="supportRequest in agent[\'support_requests\']"> <td>#{{supportRequest["id"]}}</td> <td>{{supportRequest["created_at"] | date:\'MMM d, yyyy hh:mm a Z\'}}</td> <td>{{supportRequest["customer"]}}</td> <td>{{supportRequest["subject"]}}</td> <td>{{supportRequest["category"]}}</td> <td>{{supportRequest["status"]}}</td> <td> <div ng-if="supportRequest[\'status\'] === \'closed\'"> {{supportRequest["closed_at"] | date:\'MMM d, yyyy hh:mm a Z\'}} </div> </td> <td> <a role="button" ng-click="viewSupportRequest(supportRequest.id)"> View </a> </td> </tr> </tbody> </table> </div>'),a.put("components/customer/list/template.html",'<h1>Customers</h1> <div class="table-responsive"> <table class="table table-striped"> <thead> <tr> <th>Id</th> <th>Email</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="customer in customers"> <td>#{{customer["id"]}}</td> <td>{{customer["email"]}}</td> <td> <a role="button" ng-click="viewCustomer(customer.id)"> View </a> </td> </tr> </tbody> </table> </div>'),a.put("components/customer/view/template.html",'<div class="back-link"> <a ui-sref="customer-list">&lt; Customers</a> </div> <h1>Customer</h1> <div class="well"> <div class="row"> <div class="col-md-6"> <strong>Id: </strong> {{customer[\'id\']}} </div> <div class="col-md-6"> <strong>Email: </strong> {{customer[\'email\']}} </div> </div> </div> <h2>Support Requests</h2> <p ng-if="(customer[\'support_requests\'].length === 0)"> <i> No Support Requests Present </i> </p> <div class="table-responsive" ng-if="(customer[\'support_requests\'].length > 0)"> <table class="table table-striped"> <thead> <tr> <th>Id</th> <th>Created At</th> <th>Subject</th> <th>Category</th> <th>Assigned To</th> <th>Status</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="supportRequest in customer[\'support_requests\']"> <td>#{{supportRequest["id"]}}</td> <td>{{supportRequest["created_at"] | date:\'MMM d, yyyy hh:mm a Z\'}}</td> <td>{{supportRequest["subject"]}}</td> <td>{{supportRequest["category"]}}</td> <td>{{supportRequest["agent"]}}</td> <td>{{supportRequest["status"]}}</td> <td> <a role="button" ng-click="viewSupportRequest(supportRequest.id)"> View </a> </td> </tr> </tbody> </table> </div>'),a.put("components/report/view/template.html",'<h1>Report</h1> <div class="top-button-container"> <button type="submit" class="btn btn-primary" ng-click="downloadReport()"> Download </button> </div> <p ng-if="(supportRequests.length === 0)"> <i> No Support Requests Present </i> </p> <div class="table-responsive" ng-if="(supportRequests.length > 0)"> <table class="table table-striped"> <thead> <tr> <th>Id</th> <th>Created At</th> <th ng-if="(currentUser[\'type\'] !== \'Customer\')"> Created By </th> <th>Subject</th> <th>Category</th> <th ng-if="(currentUser[\'type\'] === \'Admin\')"> Assigned To </th> <th> Closed At </th> <th ng-if="(currentUser.type === \'Admin\')"></th> </tr> </thead> <tbody> <tr ng-repeat="supportRequest in supportRequests"> <td>#{{supportRequest["id"]}}</td> <td> {{supportRequest["created_at"] | date:\'MMM d, yyyy hh:mm a Z\'}} </td> <td ng-if="(currentUser[\'type\'] !== \'Customer\')"> {{supportRequest["customer"]}} </td> <td>{{supportRequest["subject"]}}</td> <td>{{supportRequest["category"] | humanize}}</td> <td ng-if="(currentUser[\'type\'] === \'Admin\')"> {{supportRequest["agent"]}} </td> <td> <div ng-if="supportRequest[\'status\'] === \'closed\'"> {{supportRequest["closed_at"] | date:\'MMM d, yyyy hh:mm a Z\'}} </div> </td> <td ng-if="(currentUser.type === \'Admin\')"> <a role="button" ng-click="viewSupportRequest(supportRequest.id)"> View </a> </td> </tr> </tbody> </table> </div>'),a.put("components/support-request/create/template.html",'<div class="alert alert-danger" role="alert" ng-show="error"> {{error}} </div> <h1>New Support Request</h1> <form ng-submit="submitSupportRequest(supportRequestForm)" role="form" ng-init="supportRequestForm = {}"> <div class="form-group"> <label for="category">Category*</label> <select class="form-control" name="category" ng-model="supportRequestForm.category" required> <option value="" disabled> Select One </option> <option value="installation_and_setup"> Installation and Setup </option> <option value="voice_quality">Voice Quality</option> <option value="video_quality">Video Quality</option> </select> </div> <div class="form-group"> <label for="severity">Severity*</label> <select class="form-control" name="severity" ng-model="supportRequestForm.severity" required> <option value="" disabled> Select One </option> <option value="low" selected> Low </option> <option value="medium">Medium</option> <option value="high">High</option> </select> </div> <div class="form-group"> <label for="subject">Subject*</label> <input type="text" name="subject" id="subject" ng-model="supportRequestForm.subject" required class="form-control"> </div> <div class="form-group"> <label for="description">Description*</label> <textarea name="description" id="description" ng-model="supportRequestForm.description" required class="form-control" rows="5"></textarea> </div> <button type="submit" class="btn btn-primary btn-lg">Create</button> </form>'),a.put("components/support-request/list/template.html",'<h1>Support Requests</h1> <div class="top-button-container"> <button type="submit" class="btn btn-primary" ng-click="createNewSupportRequest()" ng-show="(currentUser.type === \'Customer\')"> Create New </button> <button type="submit" class="btn btn-primary" ng-click="viewReport()" ng-show="(currentUser.type !== \'Customer\')"> View Report </button> </div> <p ng-if="(supportRequests.length === 0)"> <i> No Support Requests Present </i> </p> <div class="table-responsive" ng-if="(supportRequests.length > 0)"> <table class="table table-striped"> <thead> <tr> <th>Id</th> <th>Created At</th> <th ng-if="(currentUser[\'type\'] !== \'Customer\')"> Created By </th> <th>Subject</th> <th>Category</th> <th ng-if="(currentUser[\'type\'] === \'Admin\')"> Assigned To </th> <th>Status</th> <th ng-if="(currentUser[\'type\'] !== \'Agent\')"> Closed At </th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="supportRequest in supportRequests"> <td>#{{supportRequest["id"]}}</td> <td> {{supportRequest["created_at"] | date:\'MMM d, yyyy hh:mm a Z\'}} </td> <td ng-if="(currentUser[\'type\'] !== \'Customer\')"> {{supportRequest["customer"]}} </td> <td>{{supportRequest["subject"]}}</td> <td>{{supportRequest["category"] | humanize}}</td> <td ng-if="(currentUser[\'type\'] === \'Admin\')"> {{supportRequest["agent"]}} </td> <td>{{supportRequest["status"]}}</td> <td ng-if="(currentUser[\'type\'] !== \'Agent\')"> <div ng-if="supportRequest[\'status\'] === \'closed\'"> {{supportRequest["closed_at"] | date:\'MMM d, yyyy hh:mm a Z\'}} </div> </td> <td> <a role="button" ng-click="viewSupportRequest(supportRequest.id)"> View </a> </td> </tr> </tbody> </table> </div>'),a.put("components/support-request/view/template.html",'<div class="back-link"> <a ui-sref="supportRequest-list">&lt; Support Requests</a> </div> <h1>Support Request</h1> <div class="well"> <div class="row"> <div class="col-md-6"> <strong>Subject: </strong> {{supportRequest[\'subject\']}} </div> <div class="col-md-6"> <strong>Category: </strong> {{supportRequest[\'category\'] | humanize}} </div> </div> <div class="row"> <div class="col-md-6"> <strong>Id: </strong> {{supportRequest[\'id\']}} </div> <div class="col-md-6"> <strong>Status: </strong> {{supportRequest[\'status\'] | capitalize}} </div> </div> <div class="row"> <div class="col-md-6"> <strong>Created At: </strong> {{supportRequest[\'created_at\'] | date:\'MMM d, yyyy hh:mm a Z\'}} </div> <div class="col-md-6"> <strong>Severity: </strong> {{supportRequest[\'severity\'] | capitalize}} </div> </div> <div class="row"> <div class="col-md-6"> <strong>Created By: </strong> {{supportRequest[\'customer\']}} </div> <div class="col-md-6" ng-if="((currentUser[\'type\'] !== \'Customer\') &&\n                   (supportRequest[\'closed_at\'] === null))"> <strong>Assigned To: </strong> {{supportRequest[\'agent\']}} </div> <div class="col-md-6" ng-if="(supportRequest[\'closed_at\'] !== null)"> <strong>Closed At: </strong> {{supportRequest[\'closed_at\'] | date:\'MMM d, yyyy hh:mm a Z\'}} </div> </div> <div class="row"> <div class="col-md-12"> <strong>Description: </strong> {{supportRequest[\'description\']}} </div> </div> </div> <div class="button-row clearfix"> <button class="btn btn-default pull-right" type="submit" ng-show="(supportRequest[\'status\'] === \'open\')" ng-click="closeSupportRequest()"> Close </button> <button class="btn btn-default pull-right" type="submit" ng-show="(supportRequest[\'status\'] === \'closed\')" ng-if="(currentUser.type === \'Customer\')" ng-click="reopenSupportRequest()"> Reopen </button> </div>'),a.put("components/user/login/template.html",'<div class="alert alert-danger" role="alert" ng-show="error"> {{error}} </div> <form ng-submit="submitLogin(loginForm)" role="form" ng-init="loginForm = {}"> <div class="form-group"> <label for="email">Email</label> <input type="email" name="email" id="email" ng-model="loginForm.email" required class="form-control"> </div> <div class="form-group"> <label for="password">Password</label> <input type="password" name="password" id="password" ng-model="loginForm.password" required class="form-control"> </div> <p> <small> Not Registered Yet? <a ui-sref="user-register">Create Account</a> </small> </p> <button type="submit" class="btn btn-primary btn-lg">Sign in</button> </form>'),a.put("components/user/registration/template.html",'<div class="alert alert-danger" role="alert" ng-show="error"> {{error}} </div> <form ng-submit="handleRegistrationButtonClick()" role="form" ng-init="registrationForm = {}"> <div class="form-group"> <label for="email">Email</label> <input type="email" name="email" id="email" ng-model="registrationForm.email" required class="form-control"> </div> <div class="form-group"> <label for="password">Password</label> <input type="password" name="password" id="password" ng-model="registrationForm.password" required class="form-control"> </div> <div class="form-group"> <label for="password_confirmation">Password confirmation</label> <input type="password" name="password_confirmation" id="password_confirmation" ng-model="registrationForm.password_confirmation" required class="form-control"> </div> <button type="submit" class="btn btn-primary btn-lg">Register</button> </form>')}]);